day3_input = [
    0b111010111011,
    0b001011110010,
    0b000110111100,
    0b110101110001,
    0b101110011111,
    0b110011111001,
    0b100000110011,
    0b011100101100,
    0b111111000111,
    0b010100001000,
    0b010111000100,
    0b100001000110,
    0b110000011011,
    0b011001101110,
    0b001010001101,
    0b010001010010,
    0b000011011101,
    0b000110100001,
    0b000100111000,
    0b011101000100,
    0b011000101001,
    0b110111000110,
    0b011001010111,
    0b011110101110,
    0b010001111111,
    0b010110001011,
    0b001110010111,
    0b000110000101,
    0b110011110000,
    0b010010101000,
    0b101010011001,
    0b010000000000,
    0b101110000001,
    0b001111101010,
    0b000011000110,
    0b101100100001,
    0b000001110011,
    0b100110011111,
    0b111011111000,
    0b010010001101,
    0b000000001111,
    0b101011100011,
    0b010110001001,
    0b101101101001,
    0b101000001101,
    0b100111111100,
    0b100001011101,
    0b110100111101,
    0b010110000111,
    0b110000001010,
    0b010001000111,
    0b001010110010,
    0b000000101011,
    0b001111011000,
    0b011000010100,
    0b000101110011,
    0b011000010011,
    0b001000101100,
    0b100110000010,
    0b000100110110,
    0b011010010000,
    0b101101010100,
    0b111101101011,
    0b101101000100,
    0b001001010011,
    0b001011000011,
    0b101100100010,
    0b010001110001,
    0b000101111010,
    0b010110001110,
    0b000111000011,
    0b011111111000,
    0b011001100101,
    0b111000111111,
    0b101001001001,
    0b010000001000,
    0b010101100100,
    0b101001011100,
    0b010111001001,
    0b110100011010,
    0b000011111111,
    0b000011111101,
    0b000000111011,
    0b010101000111,
    0b110100001111,
    0b110010101000,
    0b011011111101,
    0b110001111011,
    0b110011011110,
    0b001110011100,
    0b101001110010,
    0b111110100101,
    0b101110110000,
    0b101100000100,
    0b101110100010,
    0b111000111110,
    0b010010100010,
    0b111111101000,
    0b001110001101,
    0b000001110110,
    0b000100111100,
    0b111000001010,
    0b100001010100,
    0b000100001010,
    0b000010100101,
    0b100011110110,
    0b111000011111,
    0b111100111110,
    0b000101101011,
    0b001010000100,
    0b011011111011,
    0b100000111001,
    0b010101100000,
    0b101100111010,
    0b100100011011,
    0b110000101000,
    0b000011111110,
    0b000110010000,
    0b110110100100,
    0b100110100100,
    0b110101100011,
    0b011011000101,
    0b110000000010,
    0b001111100001,
    0b000000111001,
    0b100111001000,
    0b000110000000,
    0b011111001001,
    0b100111111000,
    0b110010000111,
    0b101000101100,
    0b100011011110,
    0b100100011100,
    0b000011001100,
    0b000000110111,
    0b001011100110,
    0b000000100001,
    0b110000010110,
    0b001111001000,
    0b111111111011,
    0b000001010001,
    0b010010011100,
    0b011100001110,
    0b100010000010,
    0b101000010001,
    0b110000110101,
    0b010011110010,
    0b110000111111,
    0b100011111100,
    0b101100110100,
    0b010001110110,
    0b000000110110,
    0b111001000101,
    0b111011011011,
    0b101010111011,
    0b001111011101,
    0b111011000000,
    0b010101110101,
    0b101010000111,
    0b111101000110,
    0b110111000101,
    0b001110111110,
    0b101100001101,
    0b101111010001,
    0b001111000110,
    0b011100110110,
    0b001110100111,
    0b000101100010,
    0b111100010010,
    0b010101010011,
    0b000010001011,
    0b010101011110,
    0b110000001000,
    0b011110000111,
    0b100001111100,
    0b011011111100,
    0b011000001111,
    0b101100011101,
    0b111100010000,
    0b111010110011,
    0b110001010100,
    0b111010110010,
    0b100010101110,
    0b111101110111,
    0b001011101010,
    0b100111100001,
    0b001011100100,
    0b110001000111,
    0b001111111100,
    0b100100011000,
    0b111100011110,
    0b011110011111,
    0b001110100010,
    0b010010011101,
    0b001001101101,
    0b100101011111,
    0b100100110111,
    0b001001000000,
    0b111001011000,
    0b000110000010,
    0b000111000111,
    0b000101001100,
    0b011011100001,
    0b010000100110,
    0b011100011111,
    0b110010100110,
    0b101101100111,
    0b101101001110,
    0b101100011011,
    0b111100101100,
    0b011001110101,
    0b110101111000,
    0b111011010001,
    0b011110111011,
    0b110100011001,
    0b101101011000,
    0b101101111110,
    0b111101101001,
    0b111011011101,
    0b001100001000,
    0b001101111010,
    0b001001010001,
    0b001111110000,
    0b000001000111,
    0b010101000100,
    0b111100100101,
    0b100001011000,
    0b000101111001,
    0b101111001010,
    0b100000110111,
    0b111010000101,
    0b110110101111,
    0b011000110001,
    0b111101010011,
    0b111001110100,
    0b000010000110,
    0b001100001101,
    0b001111110101,
    0b001000011011,
    0b011101100000,
    0b111011101100,
    0b001100111100,
    0b101111001111,
    0b110010001001,
    0b000100011101,
    0b000111011111,
    0b001100011011,
    0b100110000000,
    0b011010110001,
    0b110000010010,
    0b011011101111,
    0b110011101011,
    0b100110101010,
    0b111011110100,
    0b010011000000,
    0b111110011000,
    0b000111010111,
    0b101001100010,
    0b101110010100,
    0b101000010011,
    0b001110001100,
    0b011110000011,
    0b110001001010,
    0b001010110111,
    0b011001101001,
    0b110001110011,
    0b100101011011,
    0b101010100110,
    0b010011001101,
    0b010000001111,
    0b110111011110,
    0b110011100011,
    0b100011101001,
    0b011111000000,
    0b010001001001,
    0b110001011110,
    0b011000101011,
    0b001000001111,
    0b010110111101,
    0b110001100100,
    0b101101111111,
    0b001101010100,
    0b000001011010,
    0b011010110010,
    0b110011101000,
    0b000001111000,
    0b111001100111,
    0b001011000010,
    0b000000011000,
    0b000101010101,
    0b111100001001,
    0b011000001010,
    0b101010101011,
    0b011101001111,
    0b010101110010,
    0b100101100000,
    0b110000110000,
    0b011000110010,
    0b100101001000,
    0b100101011001,
    0b100110001001,
    0b011010010001,
    0b001011111001,
    0b001111100111,
    0b101000101101,
    0b010111111001,
    0b011100001000,
    0b100111111111,
    0b011110111000,
    0b110101101111,
    0b100001001000,
    0b101100101001,
    0b000001011000,
    0b101010101001,
    0b010011000100,
    0b101100011111,
    0b000111100110,
    0b111010101100,
    0b010011111101,
    0b011010110100,
    0b011101100011,
    0b001101001001,
    0b111110001101,
    0b011010010110,
    0b011000001110,
    0b001010011001,
    0b111111101011,
    0b011100111010,
    0b001111000001,
    0b101111100100,
    0b101000110000,
    0b010101100111,
    0b100100000101,
    0b110100101000,
    0b011010011101,
    0b111110000110,
    0b011001000111,
    0b101101000000,
    0b110111010110,
    0b011100111111,
    0b101101110101,
    0b000000000100,
    0b100100010001,
    0b000000110011,
    0b011110100000,
    0b010111010010,
    0b001010010101,
    0b110111100101,
    0b100011100001,
    0b011011010111,
    0b100001001100,
    0b101101000001,
    0b000111010011,
    0b101001100100,
    0b001010011101,
    0b010000100100,
    0b101011111101,
    0b010110000011,
    0b110010110111,
    0b111100110001,
    0b100010011011,
    0b000000101001,
    0b010011110011,
    0b110111011111,
    0b100111000000,
    0b001111111110,
    0b111100100111,
    0b100010011001,
    0b110011010110,
    0b110000110011,
    0b101001001000,
    0b111010000011,
    0b010010011000,
    0b100000000111,
    0b001011011101,
    0b100010111001,
    0b000011101101,
    0b100001100001,
    0b011011100110,
    0b101001010001,
    0b110001011101,
    0b101101010111,
    0b010001111010,
    0b111011001110,
    0b010001100111,
    0b011000000011,
    0b101000001001,
    0b010100000111,
    0b000011000001,
    0b011001110001,
    0b111010001110,
    0b010011111110,
    0b011100100110,
    0b111111110001,
    0b010110101110,
    0b100010010001,
    0b100100100111,
    0b100111010011,
    0b001101111111,
    0b111100011101,
    0b011101010101,
    0b100111010100,
    0b101011101101,
    0b011001000110,
    0b100110010111,
    0b110101001110,
    0b101000101110,
    0b001001000100,
    0b001100111111,
    0b111110111001,
    0b000011101100,
    0b001001100010,
    0b001101001111,
    0b001111110011,
    0b011000110011,
    0b111110110100,
    0b000111001110,
    0b001101110101,
    0b001011010000,
    0b001100011111,
    0b010010101001,
    0b110000011100,
    0b010010010101,
    0b001110001000,
    0b000011010000,
    0b001011011100,
    0b100111010000,
    0b101110000101,
    0b100111110000,
    0b000001011100,
    0b101000110100,
    0b010111011001,
    0b000001001111,
    0b110110001100,
    0b111110011111,
    0b011010000100,
    0b010110111011,
    0b011101000111,
    0b010100011010,
    0b011110111111,
    0b000011001010,
    0b011101001001,
    0b101010011011,
    0b000011111100,
    0b101011010000,
    0b001101010101,
    0b101011010111,
    0b111000011010,
    0b110101011101,
    0b110111010100,
    0b110100101100,
    0b110110001001,
    0b011000001001,
    0b111100000100,
    0b000100110101,
    0b001101101110,
    0b001011111100,
    0b000000010001,
    0b100011011001,
    0b001000100111,
    0b111111000001,
    0b000111110101,
    0b001000101001,
    0b110111111010,
    0b110010011000,
    0b010100010110,
    0b000111001001,
    0b100000111010,
    0b110011011100,
    0b011101000010,
    0b010100010111,
    0b001001000101,
    0b001010110011,
    0b100000101110,
    0b100110000011,
    0b110011111100,
    0b110111001001,
    0b001000111101,
    0b011000100000,
    0b000100101111,
    0b010111110111,
    0b110111001101,
    0b110001001111,
    0b001000010101,
    0b001111001001,
    0b001001100100,
    0b011110100111,
    0b001100100000,
    0b010111100011,
    0b001000001011,
    0b010010011110,
    0b000011110110,
    0b110101011010,
    0b011101100010,
    0b011111111001,
    0b111001100000,
    0b010100110101,
    0b011010110111,
    0b101011110001,
    0b011001010011,
    0b100011000011,
    0b011010101011,
    0b000100100111,
    0b010110010001,
    0b010100010000,
    0b101101110001,
    0b011100011100,
    0b001101001011,
    0b101110111111,
    0b100101000010,
    0b111001111101,
    0b111110110111,
    0b010111110100,
    0b101000100010,
    0b101010001000,
    0b010000001110,
    0b001000101011,
    0b100011111101,
    0b001100010010,
    0b011111110011,
    0b100101001110,
    0b000110011110,
    0b000001011001,
    0b001000100001,
    0b111100000000,
    0b010101100001,
    0b011100111000,
    0b110100000011,
    0b110011010001,
    0b001010000001,
    0b000100011010,
    0b111010010110,
    0b010000001100,
    0b011011011011,
    0b100011111110,
    0b101101000110,
    0b111000010100,
    0b011011001100,
    0b101000111111,
    0b000101101101,
    0b111010101010,
    0b011010010011,
    0b111001001100,
    0b001101001000,
    0b110101100101,
    0b011000010101,
    0b000100000101,
    0b011101111111,
    0b000101001001,
    0b110101100111,
    0b111000001100,
    0b110001111010,
    0b100110010100,
    0b010100010010,
    0b010000110110,
    0b100111101101,
    0b101110101000,
    0b101001011101,
    0b110101010101,
    0b100111011000,
    0b100001011011,
    0b100100100011,
    0b100110100011,
    0b100000010001,
    0b110110101100,
    0b001010001111,
    0b101001111000,
    0b010011110111,
    0b011100100101,
    0b000111010110,
    0b101010100001,
    0b100101001101,
    0b100001010011,
    0b000000011011,
    0b110010000100,
    0b010011010101,
    0b101110011100,
    0b101101011110,
    0b101110110110,
    0b101111001101,
    0b001001111011,
    0b011100100011,
    0b000100110001,
    0b000110011101,
    0b011011000100,
    0b100011101110,
    0b010101111111,
    0b011110000100,
    0b101001101111,
    0b110100111010,
    0b011011110011,
    0b001010010110,
    0b110010000101,
    0b001100010011,
    0b000100110011,
    0b101110110010,
    0b011101010111,
    0b001000000101,
    0b101101011101,
    0b110001011011,
    0b110011001100,
    0b011101111101,
    0b000111101011,
    0b011111001000,
    0b010100101100,
    0b100001010001,
    0b010000010101,
    0b101100101110,
    0b000010101000,
    0b010001001111,
    0b100001001111,
    0b000101001110,
    0b011111100100,
    0b110110111000,
    0b001010110001,
    0b100111001101,
    0b111100010101,
    0b000101111000,
    0b010001110100,
    0b111001111100,
    0b110111010101,
    0b000011001001,
    0b100010000001,
    0b000011110000,
    0b101110001000,
    0b101110000010,
    0b100010110110,
    0b001011100011,
    0b011010111111,
    0b101100000111,
    0b100000011110,
    0b100100101001,
    0b111100111000,
    0b101100000011,
    0b000000000010,
    0b001100101010,
    0b010111111010,
    0b001101100010,
    0b000110011011,
    0b001001000110,
    0b111010100000,
    0b100111100100,
    0b000110101110,
    0b010100011000,
    0b110100100101,
    0b111100101101,
    0b100011111001,
    0b011001010101,
    0b001100110000,
    0b111010101001,
    0b001000011000,
    0b000100101010,
    0b101000110010,
    0b111011001100,
    0b110111101000,
    0b010101011001,
    0b011001111110,
    0b000101100001,
    0b011100000111,
    0b011101111110,
    0b000101000001,
    0b110011000010,
    0b011110111110,
    0b101110001101,
    0b010100101110,
    0b000100001100,
    0b001100010001,
    0b100100101111,
    0b111110000011,
    0b010011011111,
    0b100110001000,
    0b100000001100,
    0b001001010110,
    0b001010000111,
    0b010111000110,
    0b110100000101,
    0b000101110100,
    0b010110110111,
    0b010000100111,
    0b101001000110,
    0b111010001100,
    0b000000111111,
    0b101100000010,
    0b101011001110,
    0b111001000110,
    0b111110010011,
    0b001010000010,
    0b000101010011,
    0b011111101000,
    0b011010011011,
    0b010011100011,
    0b011100010011,
    0b100001100101,
    0b000011110100,
    0b110001010000,
    0b111111010011,
    0b100010100010,
    0b101111111010,
    0b001100100011,
    0b011100000001,
    0b010110110001,
    0b011011011100,
    0b010011110100,
    0b110110110001,
    0b111111101111,
    0b001010101010,
    0b011010101101,
    0b011000110000,
    0b010111100001,
    0b011011111000,
    0b010110100110,
    0b110011100111,
    0b011011001110,
    0b011010111001,
    0b010111010110,
    0b011101100001,
    0b101000101010,
    0b010010101011,
    0b111100011111,
    0b110001101111,
    0b010011010010,
    0b111000100011,
    0b000100010001,
    0b100001111101,
    0b001010001000,
    0b001001100101,
    0b010000001010,
    0b011011010100,
    0b110110111111,
    0b000010110010,
    0b000010011100,
    0b010001000001,
    0b110010110010,
    0b000010011011,
    0b111001001011,
    0b110100110011,
    0b101100001001,
    0b000100000000,
    0b101010110010,
    0b110111100011,
    0b000110111110,
    0b111000011001,
    0b001000101101,
    0b101000011010,
    0b101110100001,
    0b011010100010,
    0b001001110101,
    0b011001011000,
    0b100110001100,
    0b110110011011,
    0b111101101000,
    0b001110101011,
    0b000010000111,
    0b101110100110,
    0b000110010110,
    0b001011111011,
    0b000010001000,
    0b011110111100,
    0b000011101011,
    0b100010001101,
    0b001011000000,
    0b011000000100,
    0b110101101101,
    0b000001101110,
    0b000111011001,
    0b011101011000,
    0b000000101111,
    0b000101111101,
    0b101011011110,
    0b100010000011,
    0b111001110000,
    0b110011110011,
    0b000101011001,
    0b110101010001,
    0b010101100110,
    0b010011000110,
    0b111111110101,
    0b100101010110,
    0b001001100001,
    0b001110011111,
    0b000000000111,
    0b110100001101,
    0b101110011110,
    0b101101110000,
    0b100101000011,
    0b111011000001,
    0b100011001110,
    0b010111011111,
    0b000000001100,
    0b100110001111,
    0b110100101111,
    0b101010111010,
    0b110000001100,
    0b010100101101,
    0b110101001010,
    0b000001100101,
    0b111011000011,
    0b101110100100,
    0b110000101110,
    0b110111000100,
    0b101001011010,
    0b011010010100,
    0b101110100101,
    0b111110100111,
    0b101100111011,
    0b110000100000,
    0b111101110001,
    0b001100011001,
    0b001000010001,
    0b010101001100,
    0b110110100011,
    0b011000100110,
    0b111001001001,
    0b110010110100,
    0b010000100101,
    0b111101111100,
    0b101001101110,
    0b110110011111,
    0b100000001011,
    0b100011011011,
    0b101110000100,
    0b011110010110,
    0b101011100000,
    0b011101101111,
    0b001011101000,
    0b011101011010,
    0b110001001101,
    0b110111101111,
    0b100011011111,
    0b100001100100,
    0b111111101101,
    0b011110000000,
    0b101000011110,
    0b000110001000,
    0b000100010010,
    0b100100010000,
    0b111001101000,
    0b001101101011,
    0b110001111111,
    0b000111000101,
    0b100001000101,
    0b111111111001,
    0b000010111011,
    0b001100000110,
    0b110101011001,
    0b110110000110,
    0b100010101101,
    0b010110010111,
    0b011101010110,
    0b011111101011,
    0b111111110000,
    0b110110100110,
    0b111001101111,
    0b001000001110,
    0b111100111100,
    0b000110110101,
    0b000100001001,
    0b011101110010,
    0b111010011011,
    0b001101111011,
    0b110110000101,
    0b000110110111,
    0b111111100110,
    0b010001110011,
    0b100010101111,
    0b011110010011,
    0b111011111001,
    0b101010110110,
    0b110101101001,
    0b010001011001,
    0b101101101010,
    0b011110101001,
    0b001100011100,
    0b101001000001,
    0b000011011001,
    0b101101100101,
    0b011001110011,
    0b110101000111,
    0b001110000101,
    0b100111011110,
    0b011101010010,
    0b110000101001,
    0b010110010110,
    0b011100110000,
    0b110010111100,
    0b110101001111,
    0b111110111110,
    0b101100001110,
    0b111000110010,
    0b110100111110,
    0b101001100000,
    0b111111100001,
    0b011000100111,
    0b101010001111,
    0b010010011011,
    0b000101011110,
    0b011000101100,
    0b110111101001,
    0b110100001100,
    0b100000011101,
    0b110110100111,
    0b111011011110,
    0b100011001011,
    0b001100100111,
    0b001110011011,
    0b100101111101,
    0b111011010111,
    0b111101111101,
    0b010110001101,
    0b011010101100,
    0b111000011011,
    0b011110000010,
    0b110111010011,
    0b101101001100,
    0b100111011010,
    0b011111111101,
    0b101011000000,
    0b100100101101,
    0b111111011000,
    0b000100101000,
    0b100010100001,
    0b010010100100,
    0b001010001100,
    0b111001010001,
    0b010101101100,
    0b111111110111,
    0b000010111101,
    0b100000001111,
    0b110111101010,
    0b101111100110,
    0b010100000110,
    0b000111011010,
    0b111011101110,
    0b111001001101,
    0b011100010110,
    0b100001100110,
    0b011111010011,
    0b000011100111,
    0b010011101111,
    0b010010000101,
    0b100001011010,
    0b100110111011,
    0b010110101001,
    0b011110011011,
    0b011001010010,
    0b011010011110,
    0b110011100001,
    0b010101001000,
    0b111101110000,
    0b100001100111,
    0b011111010111,
    0b010000011011,
    0b111111000011,
    0b010111111111,
    0b100001101101,
    0b010000100010,
    0b110000101101,
    0b100110101000,
    0b111011011111,
    0b110000010100,
    0b111101011001,
    0b001111100010,
    0b000001011011,
    0b010000010001,
    0b111101010001,
    0b001101000000,
    0b000011010111,
    0b011011010010,
    0b001110100011,
    0b111100010100,
    0b110001101010,
    0b001001111010,
    0b111001110111,
    0b100001101000,
    0b110010110001,
    0b011001101100,
    0b011110010001,
    0b110111011000,
    0b110011011101,
    0b110001010011,
    0b111111111101,
    0b010001010100,
    0b110000010011,
    0b111010110001,
    0b011000010001,
    0b011101111011,
    0b101100010010,
    0b010100111100,
    0b011001001000,
    0b110010010001,
    0b000101100000,
    0b100011101010,
    0b100000110001,
    0b010101101010,
    0b000001111111,
    0b011110011100,
    0b111011111010,
    0b110100101001,
    0b001100100100,
    0b011100101000
]


def day3_get_bit_absdiff(instr_in, length):
    bit_absdiff = [0] * length
    for i in instr_in:
        for b in range(length):
            if ((i >> b) & 0b1) > 0:
                bit_absdiff[b] += 1
            else:
                bit_absdiff[b] -= 1
        # print(f"after instr {format(i,'012b')}, bit_absdiff[11:0] = {''.join(str(bit_absdiff[::-1]))}")
    return bit_absdiff


def day3_1(instr, length):
    bit_absdiff = day3_get_bit_absdiff(instr, length)
    gamma = 0
    epsilon = 0
    for b in range(length):
        if bit_absdiff[b] > 0:
            gamma += 1 << b
        else:
            epsilon += 1 << b
    # print(f"gamma = {gamma} / 0b{format(gamma,'012b')}, epsilon = {epsilon} / 0b{format(epsilon,'012b')}")
    return gamma*epsilon


def day3_2_filter_instr(instr_in, loc, exp_bit):
    print(f"Filtering instructions, loc={loc}, exp_bit={exp_bit}, incoming list size={len(instr_in)}")
    if len(instr_in) == 1:
        return instr_in
    instr_out = []
    for i in instr_in:
        debug_str = f"Seeing instr 0b{format(i, '012b')}"
        if ((i >> loc) & 0b1) == exp_bit:
            instr_out.append(i)
            debug_str += f" - Match criteria, keep - {len(instr_out)} instr kept so far"
        print(debug_str)
    return instr_out


def day3_2(instr, length):
    o2_instr = instr
    co2_instr = instr
    for b in range(length-1, -1, -1):
        print(f"Filtering instrucitons based on bit {b}")
        bit_absdiff = day3_get_bit_absdiff(o2_instr, length)
        print(f"bit_absdiff[11:0] for o2_instr = {''.join(str(bit_absdiff[::-1]))}")
        o2_instr = day3_2_filter_instr(o2_instr, b, 1 if bit_absdiff[b] >= 0 else 0)

        bit_absdiff = day3_get_bit_absdiff(co2_instr, length)
        print(f"bit_absdiff[11:0] for co2_instr = {''.join(str(bit_absdiff[::-1]))}")
        co2_instr = day3_2_filter_instr(co2_instr, b, 0 if bit_absdiff[b] >= 0 else 1)

        print(f"Number of Oxygen instr left = {len(o2_instr)}, CO2 instr left = {len(co2_instr)}")
    print(f"Last O2 instr = 0b{format(o2_instr[0],'012b')}, CO2 instr = 0b{format(co2_instr[0],'012b')}")
    return o2_instr[0] * co2_instr[0]
